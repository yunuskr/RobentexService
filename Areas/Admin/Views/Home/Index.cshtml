@model RobentexService.Models.ViewModels.HomeIndexViewModel
@using RobentexService.Models

@functions{
    // Durum -> metin (gerekirse)
    private static string StatusLabel(ServiceStatus s) => s switch{
        ServiceStatus.YeniTalep        => "Yeni Talep",
        ServiceStatus.TeklifIletildi   => "Teklif ƒ∞letildi",
        ServiceStatus.ServisAsamasi    => "Servis A≈üamasƒ±",
        ServiceStatus.TeklifReddedildi => "Teklif Reddedildi",
        ServiceStatus.Tamamlandi       => "Tamamlandƒ±",
        ServiceStatus.FaturaEdildi     => "Fatura Edildi",
        _ => s.ToString()
    };
}

@{
    ViewData["Title"] = "Robentex Servis Takip Paneli";
    Layout = "/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";

    var editDataUrl = Url.Action("EditData", "Home", new { area = "Admin" }); // GET JSON
    var now         = DateTime.Now.ToString("HH:mm | dd.MM.yyyy");
}

<div class="kb-wrap">
  <!-- √úst bar -->
  <header class="kb-header">
    <div class="live">
      <span class="dot"></span>
      <span class="txt">Canlƒ±</span>
      <span class="sub">son g√ºncelleme: <strong>@now</strong></span>
    </div>

    <h1>Robentex Servis Takip Paneli</h1>

    <div class="search">
      <span class="mag">üîç</span>
      <input id="searchBox" type="text" placeholder="Ara: firma adƒ± veya RX kodu" />
    </div>
  </header>

  <!-- === KANBAN BOARD === -->
  <section class="kb-board">

    <!-- S√ºtun: Yeni Talep -->
    <div class="kb-col">
      <div class="kb-col-head head-green">
        <div class="pill"><span class="dot"></span>Yeni Talep</div>
        <button class="mini-create open-create" title="Yeni talep" aria-label="Yeni talep">+</button>
      </div>
      <div class="kb-col-body">
        @foreach (var it in (Model?.YeniTalep ?? Enumerable.Empty<ServiceRequest>())){
         <article class="kb-card @(it.Status == ServiceStatus.TeklifReddedildi ? "rejected" : "")"
            data-id="@it.Id"
            data-status="@((int)it.Status)"
            data-company="@it.CompanyName"
            data-rx="@it.RobentexOrderNo">
            <div class="meta">Olu≈üturma Tarihi: @it.CreatedAt.ToLocalTime().ToString("dd.MM.yyyy / HH:mm")</div>

            <!-- Firma (tek satƒ±r, ellipsis) -->
            <div class="firm ellipsis" title="@(it.CompanyName ?? "")">
              @(string.IsNullOrWhiteSpace(it.CompanyName) ? "‚Äî" : it.CompanyName)
            </div>

            <!-- Ba≈ülƒ±k (tek satƒ±r, ellipsis) -->
            <div class="ttl ellipsis" title="@(it.Title ?? "")">
              @(string.IsNullOrWhiteSpace(it.Title) ? "‚Äî" : it.Title)
            </div>

            @{
                  var displayNo =
                      !string.IsNullOrWhiteSpace(it.TrackingNo)        ? it.TrackingNo :
                      !string.IsNullOrWhiteSpace(it.RobentexOrderNo)   ? it.RobentexOrderNo :
                      !string.IsNullOrWhiteSpace(it.CustomerOrderNo)   ? it.CustomerOrderNo :
                                                                        it.Id.ToString();
              }
              <div class="id">#@displayNo</div>

            <div class="actions">
              <button class="btn btn-dark open-edit" type="button" data-id="@it.Id">D√ºzenle</button>
              <button class="btn btn-ok open-details"  type="button" data-id="@it.Id">Detay G√∂r</button>
            </div>
          </article>
        }
      </div>
    </div>

    <!-- S√ºtun: Teklif ƒ∞letildi -->
    <div class="kb-col">
      <div class="kb-col-head head-amber">
        <div class="pill"><span class="dot"></span>Teklif ƒ∞letildi</div>
        <button class="mini-create open-create" title="Yeni talep">+</button>
      </div>
      <div class="kb-col-body">
        @foreach (var it in (Model?.TeklifIletildi ?? Enumerable.Empty<ServiceRequest>())){
          <article class="kb-card @(it.Status == ServiceStatus.TeklifReddedildi ? "rejected" : "")"
         data-id="@it.Id" data-status="@((int)it.Status)">
            <div class="meta">Olu≈üturma Tarihi: @it.CreatedAt.ToLocalTime().ToString("dd.MM.yyyy / HH:mm")</div>

            <!-- Firma (tek satƒ±r, ellipsis) -->
            <div class="firm ellipsis" title="@(it.CompanyName ?? "")">
              @(string.IsNullOrWhiteSpace(it.CompanyName) ? "‚Äî" : it.CompanyName)
            </div>

            <!-- Ba≈ülƒ±k (tek satƒ±r, ellipsis) -->
            <div class="ttl ellipsis" title="@(it.Title ?? "")">
              @(string.IsNullOrWhiteSpace(it.Title) ? "‚Äî" : it.Title)
            </div>

            @{
                  var displayNo =
                      !string.IsNullOrWhiteSpace(it.TrackingNo)        ? it.TrackingNo :
                      !string.IsNullOrWhiteSpace(it.RobentexOrderNo)   ? it.RobentexOrderNo :
                      !string.IsNullOrWhiteSpace(it.CustomerOrderNo)   ? it.CustomerOrderNo :
                                                                        it.Id.ToString();
              }
              <div class="id">#@displayNo</div>

            <div class="actions">
              <button class="btn btn-dark open-edit" type="button" data-id="@it.Id">D√ºzenle</button>
              <button class="btn btn-ok open-details"  type="button" data-id="@it.Id">Detay G√∂r</button>
            </div>
          </article>
        }
      </div>
    </div>

    <!-- S√ºtun: Servis A≈üamasƒ± -->
    <div class="kb-col">
      <div class="kb-col-head head-cyan">
        <div class="pill"><span class="dot"></span>Servis A≈üamasƒ±</div>
        <button class="mini-create open-create" title="Yeni talep">+</button>
      </div>
      <div class="kb-col-body">
        @foreach (var it in (Model?.ServisAsamasi ?? Enumerable.Empty<ServiceRequest>())){
          <article class="kb-card @(it.Status == ServiceStatus.TeklifReddedildi ? "rejected" : "")"
            data-id="@it.Id" data-status="@((int)it.Status)">
            <div class="meta">Olu≈üturma Tarihi: @it.CreatedAt.ToLocalTime().ToString("dd.MM.yyyy / HH:mm")</div>

            <!-- Firma (tek satƒ±r, ellipsis) -->
            <div class="firm ellipsis" title="@(it.CompanyName ?? "")">
              @(string.IsNullOrWhiteSpace(it.CompanyName) ? "‚Äî" : it.CompanyName)
            </div>

            <!-- Ba≈ülƒ±k (tek satƒ±r, ellipsis) -->
            <div class="ttl ellipsis" title="@(it.Title ?? "")">
              @(string.IsNullOrWhiteSpace(it.Title) ? "‚Äî" : it.Title)
            </div>

            @{
                  var displayNo =
                      !string.IsNullOrWhiteSpace(it.TrackingNo)        ? it.TrackingNo :
                      !string.IsNullOrWhiteSpace(it.RobentexOrderNo)   ? it.RobentexOrderNo :
                      !string.IsNullOrWhiteSpace(it.CustomerOrderNo)   ? it.CustomerOrderNo :
                                                                        it.Id.ToString();
              }
              <div class="id">#@displayNo</div>

            <div class="actions">
              <button class="btn btn-dark open-edit" type="button" data-id="@it.Id">D√ºzenle</button>
              <button class="btn btn-ok open-details"  type="button" data-id="@it.Id">Detay G√∂r</button>
            </div>
          </article>
        }
      </div>
    </div>

    <!-- S√ºtun: Tamamlandƒ±  (Teklif Reddedildi kartlarƒ± da burada, KIRMIZI arka planla) -->
    <div class="kb-col">
      <div class="kb-col-head head-gray">
        <div class="pill"><span class="dot"></span>Tamamlandƒ±</div>
        <button class="mini-create open-create" title="Yeni talep">+</button>
      </div>
      <div class="kb-col-body">
        @{
            var completed = (Model?.Tamamlandi ?? Enumerable.Empty<ServiceRequest>())
                            .Concat(Model?.TeklifReddedildi ?? Enumerable.Empty<ServiceRequest>());
        }
        @foreach (var it in completed){
          var rejected = it.Status == ServiceStatus.TeklifReddedildi;
          <article class="kb-card @(rejected ? "rejected" : "")" data-id="@it.Id" data-status="@((int)it.Status)">
            <div class="meta">Olu≈üturma Tarihi: @it.CreatedAt.ToLocalTime().ToString("dd.MM.yyyy / HH:mm")</div>

            <!-- Firma (tek satƒ±r, ellipsis) -->
            <div class="firm ellipsis" title="@(it.CompanyName ?? "")">
              @(string.IsNullOrWhiteSpace(it.CompanyName) ? "‚Äî" : it.CompanyName)
            </div>

            <!-- Ba≈ülƒ±k (tek satƒ±r, ellipsis) -->
            <div class="ttl ellipsis" title="@(it.Title ?? "")">
              @(string.IsNullOrWhiteSpace(it.Title) ? "‚Äî" : it.Title)
            </div>

            @{
                  var displayNo =
                      !string.IsNullOrWhiteSpace(it.TrackingNo)        ? it.TrackingNo :
                      !string.IsNullOrWhiteSpace(it.RobentexOrderNo)   ? it.RobentexOrderNo :
                      !string.IsNullOrWhiteSpace(it.CustomerOrderNo)   ? it.CustomerOrderNo :
                                                                        it.Id.ToString();
              }
              <div class="id">#@displayNo</div>

            <div class="actions">
              <button class="btn btn-dark open-edit" type="button" data-id="@it.Id">D√ºzenle</button>
              <button class="btn btn-ok open-details"  type="button" data-id="@it.Id">Detay G√∂r</button>
            </div>
          </article>
        }
      </div>
    </div>

    <!-- S√ºtun: Fatura Edildi -->
    <div class="kb-col">
      <div class="kb-col-head head-purple">
        <div class="pill"><span class="dot"></span>Fatura Edildi</div>
        <button class="mini-create open-create" title="Yeni talep">+</button>
      </div>
      <div class="kb-col-body">
        @foreach (var it in (Model?.FaturaEdildi ?? Enumerable.Empty<ServiceRequest>())){
          <article class="kb-card @(it.Status == ServiceStatus.TeklifReddedildi ? "rejected" : "")"
         data-id="@it.Id" data-status="@((int)it.Status)">
            <div class="meta">Olu≈üturma Tarihi: @it.CreatedAt.ToLocalTime().ToString("dd.MM.yyyy / HH:mm")</div>

            <!-- Firma (tek satƒ±r, ellipsis) -->
            <div class="firm ellipsis" title="@(it.CompanyName ?? "")">
              @(string.IsNullOrWhiteSpace(it.CompanyName) ? "‚Äî" : it.CompanyName)
            </div>

            <!-- Ba≈ülƒ±k (tek satƒ±r, ellipsis) -->
            <div class="ttl ellipsis" title="@(it.Title ?? "")">
              @(string.IsNullOrWhiteSpace(it.Title) ? "‚Äî" : it.Title)
            </div>

            @{
                  var displayNo =
                      !string.IsNullOrWhiteSpace(it.TrackingNo)        ? it.TrackingNo :
                      !string.IsNullOrWhiteSpace(it.RobentexOrderNo)   ? it.RobentexOrderNo :
                      !string.IsNullOrWhiteSpace(it.CustomerOrderNo)   ? it.CustomerOrderNo :
                                                                        it.Id.ToString();
              }
              <div class="id">#@displayNo</div>

            <div class="actions">
              <button class="btn btn-dark open-edit" type="button" data-id="@it.Id">D√ºzenle</button>
              <button class="btn btn-ok open-details"  type="button" data-id="@it.Id">Detay G√∂r</button>
            </div>
          </article>
        }
      </div>
    </div>

  </section>

  <!-- Alt logo -->
  <footer class="kb-footer">
    <img src="~/Images/Robentex.png" alt="Robentex" asp-append-version="true" />
  </footer>
</div>

@* === Modal TEMPLATE partial‚Äôlar === *@
@await Html.PartialAsync(
  "~/Views/Shared/Modals/_EditServiceRequestModal.cshtml",
  new RobentexService.Models.ViewModels.Modals.EditServiceRequestModalVm{
      SaveUrl = Url.Action("Save", "ServiceRequests", new { area = "Admin" })!
  }
)
@await Html.PartialAsync("~/Views/Shared/Modals/_ServiceRequestDetailsModal.cshtml")
@await Html.PartialAsync(
  "~/Views/Shared/Modals/_CreateServiceRequestModal.cshtml",
  new RobentexService.Models.ViewModels.Modals.CreateServiceRequestModalVm{
      CreateUrl = Url.Action("Create", "ServiceRequests", new { area = "Admin" })!
  }
)

@section Styles{
  <link rel="stylesheet" href="~/css/rtx-modal.css" asp-append-version="true" />
  <style>
  :root{
    --bg:#1f1f1f; --panel:#2a2a2a; --text:#eaeaea; --muted:#a9b0b7;
    --green:#47c266; --amber:#f2c039; --cyan:#3ac2e3; --gray:#767a81; --purple:#a576d8; --red:#d94a4a;
  }

  /* Genel */
  html, body{ height:100%; }
  body{ background:#1b1b1b; color:var(--text); }
  .kb-wrap{ width:100%; max-width:1600px; margin:0 auto; padding:8px 10px 10px; }

  /* √úst bar */
  .kb-header{
    display:grid; grid-template-columns:1fr auto 1fr; grid-template-rows:auto auto;
    align-items:center; gap:8px 12px; margin-bottom:12px;
  }
  .kb-header h1{ grid-column:2; grid-row:1; margin:0; font-weight:700; }
  .kb-header .live{ grid-column:1; grid-row:1; display:flex; align-items:center; gap:8px; }
  .kb-header .dot{ width:10px; height:10px; border-radius:50%; background:#ff3b30; box-shadow:0 0 0 3px rgba(255,59,48,.15); }
  .kb-header .txt{ font-weight:600; color:#ff6961; }
  .kb-header .sub{ color:var(--muted); font-size:.9rem; }
  .kb-header .search{
    grid-column:1/4; grid-row:2; position:relative; width:min(1200px, 100%); justify-self:center;
  }
  .kb-header .search input{
    width:100%; height:48px; background:#555; border:1px solid #666; color:var(--text);
    padding:.8rem 1.1rem .8rem 2.4rem; border-radius:26px; outline:0;
  }
  .kb-header .search .mag{ position:absolute; left:12px; top:50%; transform:translateY(-50%); opacity:.85; }

  /* === KANBAN === */
  .kb-board{
  display:flex;
  gap:14px;
  padding:10px;

  /* arka plan & √ßer√ßeve kalktƒ± */
  background: transparent;
  border: none;

  /* yatay scroll kapalƒ±, y√ºkseklik sabit */
  overflow-x: hidden;
  height: calc(100vh - 200px);
  align-items: stretch;
}
  .kb-board::-webkit-scrollbar{ height:10px; }
  .kb-board::-webkit-scrollbar-thumb{ background:#555; border-radius:10px; border:2px solid #2f2f2f; }

  .kb-col{
  flex: 1 1 0;      /* t√ºm kolonlar e≈üit geni≈ülesin */
  min-width: 0;     /* i√ßerik ta≈ümalarƒ±nda yatay scroll olu≈ümasƒ±n */
  background:#1f1f1f; border:1px solid #3a3a3a; border-radius:12px;
  display:flex; flex-direction:column; overflow:hidden;
}
  .kb-col-head{
  display:flex; align-items:center; justify-content:space-between;
  padding:8px 10px; border-bottom:1px solid #3a3a3a; background:#272727;
}
  .kb-col-head .pill{
    display:inline-flex; align-items:center; gap:8px; font-weight:800; color:#111;
    padding:.35rem .7rem; border-radius:999px;
  }
  .kb-col-head .dot{ width:8px; height:8px; border-radius:50%; background:#0e0e0e; opacity:.35; }
  .head-green  .pill{ background:var(--green); }
  .head-amber  .pill{ background:var(--amber); }
  .head-cyan   .pill{ background:var(--cyan); }
  .head-gray   .pill{ background:var(--gray); color:#fff; }
  .head-purple .pill{ background:var(--purple); }

  .mini-create{
    width:26px; height:26px; border-radius:8px; border:1px solid #3b3b3b;
    background:#2d2d2d; color:#ddd; font-weight:900; line-height:1; cursor:pointer;
  }

  .kb-col-body{
  flex: 1 1 auto;
  min-height: 0;
  overflow-y: auto;
  overflow-x: hidden;

  /* spacing */
  padding: 12px 10px;
  display: flex;
  flex-direction: column;
  gap: 12px;          /* kartlar arasƒ± mesafe (isteƒüe g√∂re 14‚Äì16 yapabilirsin) */
}
  .kb-col-body::-webkit-scrollbar{ width:10px; }
  .kb-col-body::-webkit-scrollbar-thumb{ background:#555; border-radius:10px; border:2px solid #2f2f2f; }

  /* Kart */
  .kb-card{
    background:#2a2a2a; border:1px solid #3a3a3a; border-radius:10px;
    padding:8px 10px;
  }
  /* Reddedilen kart vurgu (kƒ±rmƒ±zƒ± arka plan) */
  .kb-card.rejected{
    background:#5a2020;
    border-color:#7f2c2c;
  }

  .kb-card .meta{ color:#b6bcc3; font-size:.82rem; margin-bottom:4px; }
  .kb-card .ttl{ font-weight:800; margin:0 0 4px 0; font-size:1rem; color:#eaeaea; }
  .kb-card .id{ font-size:.82rem; color:#cfcfcf; margin-bottom:6px; }
  .kb-card .actions{ display:flex; gap:8px; }
  .btn{ border:none; border-radius:999px; padding:.35rem .8rem; font-weight:800; cursor:pointer; }
  .btn-dark{ background:#111; color:#fff; }
  .btn-ok{ background:#3cd25b; color:#0e0e0e; }

  .kb-footer{ display:flex; justify-content:center; align-items:center; padding:8px 0 2px; opacity:.9; }
  .kb-footer img{ height:24px; }

  @@media (max-width: 900px){
    .kb-board{ height: calc(100vh - 180px); }
  }

  /* Tek satƒ±r ellipsis */
.ellipsis{
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

/* Kart i√ßi hiyerar≈üi */
.kb-card .firm{
  font-weight: 800;
  color: #e6edf3;     /* biraz daha parlak */
  margin: 2px 0 2px;
  font-size: 1rem;
}

.kb-card .ttl{
  font-weight: 600;
  color: #c6cbd1;
  margin: 0 0 6px 0;
  font-size: .95rem;
}

.kb-card .id{
  font-size: .82rem;
  color:#cfcfcf;
  margin-bottom: 6px;
}
/* ==== MOBƒ∞L D√úZELTMELER ==== */
@@media (max-width: 768px){
  /* Board yatay kaydƒ±rƒ±labilir olsun, s√ºtunlar sƒ±kƒ±≈ümasƒ±n */
  .kb-board{
    overflow-x: auto;          /* HORIZ SCROLL A√á */
    gap: 10px;
    height: calc(100dvh - 180px); /* biraz daha y√ºksek */
    padding: 8px;
  }

  /* Her s√ºtun sabit/min geni≈ülikte kalsƒ±n (daralmayƒ± kapat) */
  .kb-col{
    flex: 0 0 300px;    /* ~300px geni≈ülik */
    min-width: 280px;   /* daha da k√º√ß√ºk olmasƒ±n */
    max-width: 320px;   /* √ßok b√ºy√ºmesin */
  }

  /* S√ºtun ba≈ülƒ±ƒüƒ± ve g√∂vde padding‚Äôlerini k√º√ß√ºlt */
  .kb-col-head{ padding: 6px 8px; }
  .kb-col-body{
    padding: 8px;
    gap: 10px;
  }

  /* Kart i√ß tipografi/padding biraz kompakt */
  .kb-card{ padding: 8px; }
  .kb-card .meta{ font-size: .8rem; }
  .kb-card .firm{ font-size: .95rem; }
  .kb-card .ttl{ font-size: .9rem; }

  /* √úst bar tek kolon d√ºzen */
  .kb-header{
    grid-template-columns: 1fr;
    grid-template-rows: auto auto auto;
    gap: 6px 10px;
  }
  .kb-header h1{ grid-column: 1; grid-row: 1; font-size: 1.05rem; }
  .kb-header .live{ grid-column: 1; grid-row: 2; }
  .kb-header .search{
    grid-column: 1; grid-row: 3;
    width: 100%;
  }
  .kb-header .search input{ height: 42px; }
}
/* ==== HEADER ARALIK & BA≈ûLIK G√ñRSEL ƒ∞Yƒ∞LE≈ûTƒ∞RME ==== */
.kb-header{
  /* grid zaten tanƒ±mlƒ±; sadece bo≈üluklarƒ± artƒ±rƒ±yoruz */
  row-gap: 14px;              /* ba≈ülƒ±k ‚Üî arama kutusu arasƒ± */
  margin-top: 10px;           /* navbar‚Äôdan sonra biraz nefes */
  margin-bottom: 18px;        /* arama kutusu ‚Üî s√ºtunlar arasƒ± */
}

.kb-header h1{
  margin: 4px 0 2px 0;        /* ba≈ülƒ±k √ºst/alt bo≈üluk */
  font-size: clamp(1.4rem, 2.2vw + 1rem, 2.6rem);
  line-height: 1.15;
  letter-spacing: .3px;
  text-shadow: 0 1px 0 rgba(0,0,0,.35);
}

.kb-header .search{
  width: min(1250px, 100%);   /* kutuyu √ßok sƒ±kƒ±≈ütƒ±rma */
}

.kb-header .search input{
  height: 50px;               /* azƒ±cƒ±k b√ºy√ºs√ºn, daha dengeli dursun */
}

/* S√ºtun b√∂l√ºm√º ba≈ülƒ±ƒüa daha uzak dursun */
.kb-board{
  margin-top: 6px;            /* arama ile board arasƒ± k√º√ß√ºk bir bo≈üluk */
}

/* ==== MOBƒ∞L DENGELEME (√ßok a√ßƒ±lmasƒ±n) ==== */
@@media (max-width: 768px){
  .kb-header{
    row-gap: 10px;
    margin-top: 8px;
    margin-bottom: 14px;
  }
  .kb-header h1{
    font-size: 1.25rem;
    text-shadow: none;
  }
  .kb-header .search input{
    height: 44px;
  }
  .kb-board{
    margin-top: 4px;
  }
}
/* Ba≈ülƒ±k satƒ±rƒ±nƒ± tamamen gizle */
.kb-card .ttl{ display:none !important; }

/* Kartƒ±n kendi padding'i k√º√ß√ºls√ºn */
.kb-card{ padding: 6px 8px !important; }
/* Olu≈üturma tarihi satƒ±rƒ±nƒ± tamamen kaldƒ±r */
.kb-card .meta{ display:none !important; }

/* Tarih kalkƒ±nca √ºst‚Äìalt bo≈üluklarƒ± biraz daha sƒ±kƒ±la≈ütƒ±r */
.kb-card{ padding-top: 6px !important; padding-bottom: 6px !important; }
.kb-col-body{ gap: 7px !important; }

/* Firma satƒ±rƒ± daha k√º√ß√ºk ve kompakt */
.kb-card .firm{
  font-size: .9rem !important;
  font-weight: 700 !important;
  margin: 1px 0 2px !important;
}

/* Meta ve ID satƒ±rlarƒ±nƒ± da k√º√ß√ºlt */
.kb-card .meta{
  font-size: .75rem !important;
  margin-bottom: 3px !important;
}
.kb-card .id{
  font-size: .75rem !important;
  margin-bottom: 5px !important;
}

/* Kartlar arasƒ± mesafeyi azalt */
.kb-col-body{
  gap: 8px !important;
  padding: 8px !important; /* istersen mevcut deƒüeri koruyabilirsin */
}

/* Butonlarƒ± kompakt yap */
.kb-card .actions{ gap: 6px !important; }
.btn{
  padding: .28rem .6rem !important;
  font-size: .78rem !important;
  border-radius: 999px !important;
  line-height: 1.1 !important;
}

/* Reddedilen kartlarda da aynƒ± sƒ±kƒ±lƒ±k kalsƒ±n */
.kb-card.rejected{
  padding: 6px 8px !important;
}

/* Mobilde biraz daha sƒ±kƒ±la≈ütƒ±r (opsiyonel) */
@@media (max-width: 768px){
  .kb-card{ padding: 6px 7px !important; }
  .kb-card .firm{ font-size: .88rem !important; }
  .kb-card .meta, .kb-card .id{ font-size: .72rem !important; }
  .btn{ font-size: .76rem !important; padding: .26rem .52rem !important; }
  .kb-col-body{ gap: 7px !important; }
}

  </style>
  
}

@section Scripts{
  <script>
    // Modal endpointleri
    window.__RTX_EDIT_DATA_URL__    = '@editDataUrl';
    window.__RTX_DETAILS_DATA_URL__ = '@Url.Action("DetailsData","Home", new { area="Admin" })';
  </script>

  <script src="~/js/edit-modal.js" asp-append-version="true"></script>
  <script src="~/js/details-modal.js" asp-append-version="true"></script>
  <script src="~/js/create-modal.js" asp-append-version="true"></script>

  <!-- basit arama: kart ba≈ülƒ±ƒüƒ± / id i√ßinde filtre -->
  <script>
  const q = document.getElementById('searchBox');

  function applySearch(){
    const term = (q?.value || '').trim().toLowerCase();

    document.querySelectorAll('.kb-card').forEach(card => {
      // Kart √ºzerinde sakladƒ±ƒüƒ±mƒ±z deƒüerler
      const company = (card.dataset.company || '').toLowerCase();
      const rx      = (card.dataset.rx || '').toLowerCase();

      // Firma adƒ± veya RX kodu e≈üle≈üirse g√∂ster
      const match = term === '' || company.includes(term) || rx.includes(term);
      card.style.display = match ? '' : 'none';
    });
  }

  q?.addEventListener('input', applySearch);
</script>
}
